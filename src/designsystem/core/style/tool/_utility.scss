@use "sass:map";
@use "../../variables";
@use "../function/map" as function-map;
@use "../selector/function/namespace";
@use "../selector/setting/breakpoint" as setting-breakpoint;
@use "../selector/tool/breakpoint" as tool-breakpoint;

////
/// Core Tool
/// @group core
////

@mixin build-utility($category, $name, $modifier: null) {
  // Récupération des variables depuis src/variables.scss
  $utilityVars: map.get(variables.$variables, $category);

  @if map.get(variables.$variables, $category) != null {
    $utilityVars: function-map.to-map(map.get($utilityVars, $name));
    $breakpointsVars: map.get($utilityVars, 'breakpoints');

    // breakpoints: all = xs, sm, md, lg, xl
    $breakpointsList: if($breakpointsVars == all, map.keys(setting-breakpoint.$breakpoints), $breakpointsVars);
    @if ($breakpointsList == null) { $breakpointsList: first; } // default: first

    // si l'utilitaire n'est pas désactivé
    @if (map.get($utilityVars, 1) != false and map.get($utilityVars, active) != false) {
      @each $bp in $breakpointsList {
        $mod: '-#{$bp}';
        @if ($bp == xs or $bp == first) {
          $bp: first;
          $mod: '';
        }
        @if $modifier {
          $mod: #{$mod + '-' + $modifier};
        }
        @include tool-breakpoint.respond-from($bp) {
          #{namespace.ns($name)}#{$mod} {
            @content;
          }
        }
      }
    }
  }
}

@use "../../selector/function/associate";
@use "../../selector/tool/nest";
@use "../../spacing/function/space" as function-space;
@use "../../spacing/tool/space" as tool-space;

////
/// Core Tool : Reset list
/// @group core
////

@mixin enable-list-style() {
  $selector: null;

  @if & == null {
    $selector: ':root';
  }

  @include nest.nest($selector) {
    --ul-type: disc;
    --ol-type: decimal;
    --ul-start: #{function-space.space(4v)};
    --ol-start: #{function-space.space(6v)};
    --xl-block: #{function-space.space(2v)};
    --li-bottom: #{function-space.space(1v)};
    --xl-base: 1em;
    --ol-content: counters(li-counter, ".") ".\00a0\00a0";
  }
}

@mixin disable-list-style() {
  --ul-type: none;
  --ol-type: none;
  --ul-start: 0;
  --ol-start: 0;
  --xl-block: 0;
  --li-bottom: 0;
  --ol-content: none;
}

@mixin enable-list-style-legacy($unify: false) {
  $ul: ul;
  $ol: ol;

  @if $unify {
    $ul: associate.selector-associate('&', 'ul');
    $ol: associate.selector-associate('&', 'ol');
  }

  @at-root {
    #{$ul} {
      list-style-type: disc;
    }

    #{$ol} {
      list-style-type: decimal;
    }

    #{$ul},
    #{$ol} {
      @include tool-space.padding-left(4v);
      @include tool-space.margin-y(2v);
    }
  }
}

@mixin disable-list-style-legacy($unify: false) {
  $ul: '#{&} ul';
  $ol: '#{&} ol';

  @if $unify {
    $ul: associate.selector-associate('#{&}', 'ul');
    $ol: associate.selector-associate('#{&}', 'ol');
  }

  @at-root {
    #{$ul} {
      list-style-type: none;
    }

    #{$ol} {
      list-style-type: none;
    }

    #{$ul},
    #{$ol} {
      @include tool-space.padding-left(0);
      @include tool-space.margin-y(0);
    }
  }
}

@use "sass:meta";
@use "style/setting";

////
/// Range Main
/// @group range
////

/* ¯¯¯¯¯¯¯¯¯ *\
  RANGE
\* ˍˍˍˍˍˍˍˍˍ */

@use '../../../module/path';
@use '../../../module/shame/media-query';

@use '../../../module/color';
@use '../../../module/selector';
@use '../../../module/elevation';
@use '../../../module/disabled';

@include path.to-dist(2);
@include media-query.order;

@include meta.load-css('index');
@include meta.load-css('style/module');
// @import 'style/scheme';
////
/// Range Module
/// @group range
////


@mixin _range-scheme($legacy: false) {
  #{selector.ns(range)} {
    &#{selector.ns-attr(js-range)} {
      @include before {
        @include color.box-shadow(action-high designsystem-primary, (legacy:$legacy), );
      }

      @include after {
        @include color.background(active designsystem-primary, (legacy:$legacy));
      }

      input[type=range] {
        @include selector.range-thumb($legacy) {
          @include elevation.elevate(raised, (legacy: $legacy));
          @include color.background(default grey, (legacy:$legacy));
          @include color.border(action-high designsystem-primary, (legacy:$legacy));
        }

        @include disabled.selector {
          @include selector.range-thumb($legacy) {
            @include color.border(disabled grey, (legacy:$legacy));
          }
        }
      }
    }

    &__output {
      @include color.text(active designsystem-primary, (legacy:$legacy));
    }

    &__min,
    &__max {
      @include color.text(mention grey, (legacy:$legacy));
    }

    &--step {
      &#{selector.ns-attr(js-range)} {
        @include before {
          @include color.background-image(action-high designsystem-primary, (legacy:$legacy), setting.$range-track-gradient);
        }

        @include after {
          @include color.background-image(action-low designsystem-primary, (legacy:$legacy), setting.$range-progress-gradient);
          @include color.box-shadow(active designsystem-primary, (legacy:$legacy), left-10-in right-10-in);
        }
      }
    }

    &--step#{&}--sm {
      &#{selector.ns-attr(js-range)} {
        @include after {
          @include color.box-shadow(active designsystem-primary, (legacy:$legacy), left-6-in right-6-in);
        }
      }
    }

    // &--double#{&}--step {
    //   &#{selector.ns-attr(js-range)} {
    //     @include after {
    //       @include color.box-shadow(active designsystem-primary, (legacy:$legacy), left-22-in right-22-in);
    //     }
    //   }
    // }

    // &--double#{&}--step#{&}--sm {
    //   &#{selector.ns-attr(js-range)} {
    //     @include after {
    //       @include color.box-shadow(active designsystem-primary, (legacy:$legacy), left-14-in right-14-in);
    //     }
    //   }
    // }
  }

  #{selector.ns-group(range)} {
    &--error {
      @include before {
        @include color.background-image(border plain error, (legacy:$legacy));
      }
    }

    &--valid {
      @include before {
        @include color.background-image(border plain success, (legacy:$legacy));
      }
    }

    &--disabled {
      #{selector.ns(range)} {
        &#{selector.ns-attr(js-range)} {
          @include before {
            @include color.box-shadow(disabled grey, (legacy:$legacy));
          }

          @include after {
            @include color.background(disabled grey, (legacy:$legacy));
          }
        }

        &--step {
          &#{selector.ns-attr(js-range)} {
            @include before {
              @include color.background-image(disabled grey, (legacy:$legacy), setting.$range-track-gradient);
            }

            @include after {
              @include color.background-image(default grey, (legacy:$legacy), setting.$range-progress-gradient);
            }
          }
        }

        &__output,
        &__min,
        &__max {
          @include color.text(disabled grey, (legacy:$legacy));
        }
      }
    }
  }
}


@include _range-scheme;
